{
    "StartAt": "ClearBucket",
    "States": {
        "ClearBucket": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
                "FunctionName": "${ClearBucketFunction}",
                "Payload": { }
            },
            "ResultSelector": { },
            "ResultPath": "$.ClearBucket",
            "Next": "StartBuild"
        },

        "StartBuild": {
            "Type": "Task",
            "Resource": "arn:${AWS::Partition}:states:::codebuild:startBuild.sync",
            "Parameters": {
                "ProjectName": "${CodeBuild::Project}"
            },
            "ResultSelector": {
                "BuildStatus.$": "$.Build.BuildStatus"
            },
            "ResultPath": "$.StartBuild",
            "Next": "CheckBuildOutcome"
        },

        "CheckBuildOutcome": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.StartBuild.BuildStatus",
                    "StringEquals": "SUCCEEDED",
                    "Next": "GetListOfArtifacts"
                }
            ],
            "Default": "BuildFailed"
        },

        "GetListOfArtifacts": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
                "FunctionName": "${ListArtifactsFunction}",
                "Payload": { }
            },
            "ResultSelector": {
                "RunSpecs.$": "$.Payload.RunSpecs"
            },
            "ResultPath": "$.GetListOfArtifacts",
            "Next": "FanOutTests"
        },

        "FanOutTests": {
            "Type": "Map",
            "ItemsPath": "$.GetListOfArtifacts.RunSpecs",
            "MaxConcurrency": ${Parallelism},
            "Parameters": {
                "RunSpec.$": "$$.Map.Item.Value"
            },
            "Iterator": {
                "StartAt": "RunTest",
                "States": {
                    "RunTest": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::lambda:invoke",
                        "Parameters": {
                            "FunctionName": "${MeasureFunction}",
                            "Payload.$": "$"
                        },
                        "ResultSelector": {
                            "Success.$": "$.Payload.Success"
                        },
                        "ResultPath": "$.RunTest",
                        "End": true
                    }
                }
            },
            "ResultPath": "$.Functions",
            "Next": "CombineMeasurements"
        },

        "CombineMeasurements": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
                "FunctionName": "${CombineMeasurementsFunction}",
                "Payload": { }
            },
            "ResultSelector": {
                "RunSpecs.$": "$.Payload"
            },
            "ResultPath": "$.CombineMeasurements",
            "Next": "BuildSuccess"
        },

        "BuildFailed": {
            "Type": "Fail"
        },


        "BuildSuccess": {
            "Type": "Succeed"
        }
    }
}