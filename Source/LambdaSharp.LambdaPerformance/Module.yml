Module: LambdaSharp.LambdaPerformance
Using:
  - Module: LambdaSharp.S3.IO:0.8@lambdasharp
Items:

  ###
  # Parameters
  ###

  - Parameter: ProjectNames
    Scope: ListArtifactsFunction
    Section: Measurement Configuration
    Label: List of projects to measure (leave blank to measure all projects)
    Description: List of projects to measure (leave blank to measure all projects)
    Default: ""

  - Parameter: MemorySizes
    Scope: ListArtifactsFunction
    Section: Measurement Configuration
    Label: List of memory sizes to measure
    Description: List of memory sizes to measure
    Default: 128,256,512,1024,1769

  - Parameter: Runtimes
    Scope: ListArtifactsFunction
    Section: Measurement Configuration
    Label: List of runtimes to measure
    Description: List of runtimes to measure
    Default: dotnetcore3.1,dotnet6

  - Parameter: Architectures
    Scope: ListArtifactsFunction
    Section: Measurement Configuration
    Label: List of architectures to measure
    Description: List of architectures to measure
    Default: arm64,x86_64

  - Parameter: TieredOption
    Scope: ListArtifactsFunction
    Section: Measurement Configuration
    Label: Use tiered compilation for measurement
    Description: Use tiered compilation for measurement
    AllowedValues:
      - "no"
      - "yes"
      - both
    Default: both

  - Parameter: Ready2RunOption
    Scope: ListArtifactsFunction
    Section: Measurement Configuration
    Label: Use ready2run for measurement
    Description: Use ready2run for measurement
    AllowedValues:
      - "no"
      - "yes"
      - both
    Default: both

  - Parameter: ColdStartSamplesCount
    Scope: MeasureFunction
    Section: Measurement Configuration
    Label: Number of cold-start measurement samples to collect per project and configuration
    Description: Number of cold-start samples
    Type: Number
    Default: 20
    MinValue: 1
    MaxValue: 100

  - Parameter: WarmStartSamplesCount
    Scope: MeasureFunction
    Section: Measurement Configuration
    Label: Number of warm-start measurement samples to collect per project and configuration
    Description: Number of warm-start samples
    Type: Number
    Default: 50
    MinValue: 1
    MaxValue: 500

  - Parameter: Parallelism
    Section: Measurement Configuration
    Label: Number of simultaneous measurements to run
    Type: Number
    Default: 50
    MinValue: 1
    MaxValue: 1000

  ###
  # Build Project
  ###

  - Group: CodeBuild
    Items:

      - Package: Spec
        Files: CodeBuildSpec

      - Resource: Project
        Type: AWS::CodeBuild::Project
        Properties:
          Artifacts:
            Type: S3
            Packaging: NONE
            Location: !Ref BuildBucket
            Name: /
            NamespaceType: BUILD_ID
            Path: Build
          Environment:
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
            Type: LINUX_CONTAINER
          ServiceRole: !GetAtt CodeBuild::Role.Arn
          Source:
            Type: S3
            Location: !Sub ${Deployment::BucketName}/${CodeBuild::Spec}

      - Variable: ProjectName
        Scope: ListArtifactsFunction, CombineMeasurementsFunction
        Value: !Ref CodeBuild::Project

      - Resource: Role
        Type: AWS::IAM::Role
        Properties:
          Description: IAM Role for CodeBuild used by LambdaSharp.LambdaPerformance
          AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Principal:
                    Service: codebuild.amazonaws.com
                  Action: sts:AssumeRole
          Policies:
            - PolicyName: CodeBuildPolicy
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - logs:CreateLogGroup
                      - logs:CreateLogStream
                      - logs:PutLogEvents
                    Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
                  - Effect: Allow
                    Action:
                      - s3:GetBucketAcl
                      - s3:GetBucketLocation
                      - s3:GetObject
                      - s3:GetObjectVersion
                      - s3:ListBucket
                    Resource:
                      - !Sub arn:${AWS::Partition}:s3:::${Deployment::BucketName}
                      - !Sub arn:${AWS::Partition}:s3:::${Deployment::BucketName}/*
                  - Effect: Allow
                    Action:
                      - s3:GetObject
                      - s3:PutObject
                    Resource:
                      - !Sub arn:${AWS::Partition}:s3:::${BuildBucket}
                      - !Sub arn:${AWS::Partition}:s3:::${BuildBucket}/*
                  - Effect: Allow
                    Action:
                      - codebuild:CreateReportGroup
                      - codebuild:CreateReport
                      - codebuild:UpdateReport
                      - codebuild:BatchPutTestCases
                      - codebuild:BatchPutCodeCoverages
                    Resource: !Sub arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/CodeBuild-*

  - Group: TestWorkflow
    Items:

      - Resource: StepFunction
        Pragmas:
          - no-type-validation # needed because `Definition` is defined as an empty object
        Type: AWS::StepFunctions::StateMachine
        Properties:
          StateMachineType: STANDARD
          RoleArn: !GetAtt TestWorkflow::StepFunctionRole.Arn
          DefinitionString:
            Fn::Sub: !Include StepFunction.json

      - Resource: StepFunctionRole
        Type: AWS::IAM::Role
        Properties:
          Description: IAM Role for CodeBuild used by LambdaSharp.LambdaPerformance
          AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Principal:
                    Service: !Sub states.${AWS::Region}.amazonaws.com
                  Action: sts:AssumeRole
          Policies:
            - PolicyName: StepFunctionPolicy
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - codebuild:StartBuild
                      - codebuild:StopBuild
                      - codebuild:BatchGetBuilds
                    Resource: !Sub arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuild::Project}
                  - Effect: Allow
                    Action:
                      - lambda:InvokeFunction
                    Resource:
                      - !GetAtt ClearBucketFunction.Arn
                      - !GetAtt ListArtifactsFunction.Arn
                      - !GetAtt MeasureFunction.Arn
                      - !GetAtt CombineMeasurementsFunction.Arn
                  - Effect: Allow
                    Action:
                      - events:PutTargets
                      - events:PutRule
                      - events:DescribeRule
                    Resource:
                      - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/*

  ###
  # Functions
  ###

  - Function: ClearBucketFunction
    Memory: 1769
    Timeout: 30

  - Function: ListArtifactsFunction
    Memory: 1769
    Timeout: 30

  - Function: MeasureFunction
    Memory: 512
    Timeout: 900

  - Resource: FunctionPermissions
    Value: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${Module::Id}-Test-*
    Allow:
      - lambda:CreateFunction
      - lambda:UpdateFunctionConfiguration
      - lambda:DeleteFunction
      - lambda:InvokeFunction
      - lambda:GetFunction

  - Resource: LambdaRolePermissions
    Value: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaDefaultRole"
    Allow:
      - iam:PassRole

  - Resource: FunctionLogPermissions
    Value: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${Module::Id}-Test-*
    Allow:
      - logs:DeleteLogGroup
      - logs:DeleteLogStream

  - Function: CombineMeasurementsFunction
    Memory: 1769
    Timeout: 300

  - Resource: BuildBucket
    Scope: MeasureFunction, ListArtifactsFunction, ClearBucketFunction, CombineMeasurementsFunction
    Type: AWS::S3::Bucket
    Allow:
      - s3:ListBucket
      - s3:GetObject
      - s3:PutObject
      - s3:DeleteObject

  - Resource: EmptyBuildBucket
    Type: LambdaSharp::S3::EmptyBucket
    Properties:
      Bucket: !Ref BuildBucket
